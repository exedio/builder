
CHANGELOG for cope builder

This file lists all changes relevant for the user - especially all
API changes and new features recommended for most users. The log may
omit bug fixes.
The items are sorted inversely, i.e. latest items are on top

--------------------------------------------------------------------------
* generate null setter for optional composite fields
    OPTIONAL MIGRATION replace xyz(null) by xyzNull()
    MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* generate lambda builder setters for composite fields
    MIGRATION this will overload the 1 parameter setter and will required a cast for NULL setter or usage of xyzNull() [see above]
    MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* private constructor for builder of abstract class
* generate null setter for non-inherited optional item fields
    OPTIONAL MIGRATION replace xyz(null) by xyzNull()
    MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* generate lambda builder setters for non-inherited item fields
    MIGRATION this will overload the 1 parameter setter and will required a cast for NULL setter or usage of xyzNull() [see above]
    MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* use Settable instead of FunctionField for field method parameter to be usable with generated Builder.settable fields;
    MIGRATION remove useless cast
* the getOrBuild() query now includes FunctionFields that are parts of Patterns
* now compatible with COPE version that has default implementations for interface methods (>=8904..8919)
* requires JDK 1.8.0_60
* multiple packagePrefixes supported, separated by comma.
* generate double setter for PriceFields and MoneyFields
	MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* generate some additional setter for MoneyFields
	MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* generate some additional setter for SetFields, ListFields, PriceFields and RangeFields
	MIGRATION If you have already created them manually in the past, the compiler will tell you and you have to delete them in your builders.
* generator supports type parameters of items
* supports <testbuilder ... as well
* supports Settable generically
* requires JDK 1.7
* feature: the initial concrete builder is also generated;
	TIP delete your Builders once after committing, generate the new concrete builders and apply your changes from the diff.
* feature: builder in an inheritance hierarchy are named Common...Builder, the Generated...Builder will implement the concrete ...Builder to prevent class casting issues
	MIGRATION see TIP above
* bugfix: support fields covered by PartOf
