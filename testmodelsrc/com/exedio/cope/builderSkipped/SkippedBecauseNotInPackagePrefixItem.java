package com.exedio.cope.builderSkipped;

import com.exedio.cope.IntegerField;
import com.exedio.cope.Item;

public final class SkippedBecauseNotInPackagePrefixItem extends Item
{
	static final IntegerField field = new IntegerField().toFinal();


	/**

	 **
	 * Creates a new SkippedBecauseNotInPackagePrefixItem with all the fields initially needed.
	 * @param field the initial value for field {@link #field}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	SkippedBecauseNotInPackagePrefixItem(
				final int field)
	{
		this(new com.exedio.cope.SetValue<?>[]{
			SkippedBecauseNotInPackagePrefixItem.field.map(field),
		});
	}/**

	 **
	 * Creates a new SkippedBecauseNotInPackagePrefixItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private SkippedBecauseNotInPackagePrefixItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #field}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final int getField()
	{
		return SkippedBecauseNotInPackagePrefixItem.field.getMandatory(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for skippedBecauseNotInPackagePrefixItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	public static final com.exedio.cope.Type<SkippedBecauseNotInPackagePrefixItem> TYPE = com.exedio.cope.TypesBound.newType(SkippedBecauseNotInPackagePrefixItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private SkippedBecauseNotInPackagePrefixItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
