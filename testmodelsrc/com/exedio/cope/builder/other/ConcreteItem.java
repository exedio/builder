package com.exedio.cope.builder.other;

import com.exedio.cope.IntegerField;
import com.exedio.cope.builder.test.AbstractItem;

/**
 * @cope.constructor none
 * @cope.generic.constructor none
 */
public final class ConcreteItem extends AbstractItem
{
	/**
	 * @cope.get public
	 */
	private static final IntegerField concreteField = new IntegerField().toFinal();

	/**

	 **
	 * Returns the value of {@link #concreteField}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	public final int getConcreteField()
	{
		return ConcreteItem.concreteField.getMandatory(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for concreteItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	public static final com.exedio.cope.Type<ConcreteItem> TYPE = com.exedio.cope.TypesBound.newType(ConcreteItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private ConcreteItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
