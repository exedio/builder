package com.exedio.cope.builder.test;

import com.exedio.cope.Item;
import com.exedio.cope.ItemField;
import com.exedio.cope.pattern.DynamicModel;

/**
 * @cope.constructor none
 * @cope.generic.constructor none
 */
final class DynamicModelItem extends Item
{
	static final DynamicModel<SimpleItem> features = DynamicModel.create(ItemField.create(SimpleItem.class));

	/**

	 **
	 * Returns the dynamic type of this item in the model {@link #features}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getType public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.DynamicModel.Type<SimpleItem> getFeaturesType()
	{
		return DynamicModelItem.features.getType(this);
	}/**

	 **
	 * Sets the dynamic type of this item in the model {@link #features}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setType public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeaturesType(final com.exedio.cope.pattern.DynamicModel.Type<SimpleItem> type)
	{
		DynamicModelItem.features.setType(this,type);
	}/**

	 **
	 * Returns the value of <tt>field</tt> for this item in the model {@link #features}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.Object getFeatures(final com.exedio.cope.pattern.DynamicModel.Field<SimpleItem> field)
	{
		return DynamicModelItem.features.get(this,field);
	}/**

	 **
	 * Sets the value of <tt>field</tt> for this item in the model {@link #features}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeatures(final com.exedio.cope.pattern.DynamicModel.Field<SimpleItem> field,final java.lang.Object value)
	{
		DynamicModelItem.features.set(this,field,value);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for dynamicModelItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<DynamicModelItem> TYPE = com.exedio.cope.TypesBound.newType(DynamicModelItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private DynamicModelItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
