package com.exedio.cope.builder.test.genericComplex;

import com.exedio.cope.Item;
import com.exedio.cope.ItemField;
import com.exedio.cope.pattern.ListField;
import com.exedio.cope.pattern.MapField;
import com.exedio.cope.pattern.MoneyField;
import com.exedio.cope.pattern.SetField;
import java.util.Map;

final class GenSource extends Item
{
	static final ItemField<GenSup<?,?>> sup = ItemField.create(GenSup.classWildcard.value).optional();
	static final ItemField<GenMid<?>>   mid = ItemField.create(GenMid.classWildcard.value).optional();
	static final ItemField<GenSub>      sub = ItemField.create(GenSub.class).optional();

	static final MoneyField<GenSup<?,?>> moneySup = MoneyField.exclusive(ItemField.create(GenSup.classWildcard.value)).optional();
	static final MoneyField<GenMid<?>>   moneyMid = MoneyField.exclusive(ItemField.create(GenMid.classWildcard.value)).optional();
	static final MoneyField<GenSub>      moneySub = MoneyField.exclusive(ItemField.create(GenSub.class)).optional();

	static final SetField<GenSup<?,?>> setSup = SetField.create(ItemField.create(GenSup.classWildcard.value));
	static final SetField<GenMid<?>>   setMid = SetField.create(ItemField.create(GenMid.classWildcard.value));
	static final SetField<GenSub>      setSub = SetField.create(ItemField.create(GenSub.class));

	static final ListField<GenSup<?,?>> listSup = ListField.create(ItemField.create(GenSup.classWildcard.value));
	static final ListField<GenMid<?>>   listMid = ListField.create(ItemField.create(GenMid.classWildcard.value));
	static final ListField<GenSub>      listSub = ListField.create(ItemField.create(GenSub.class));

	static final ItemField<GenSub>      subFallback = ItemField.create(GenSub.class).optional();
	static final ItemField<GenSub>      subMandatory = ItemField.create(GenSub.class);

	/** @cope.ignore */ @SuppressWarnings("rawtypes") // TODO enable after cope update
	static final MapField<GenSup,GenSup> mapSup = MapField.create(ItemField.create(GenSup.class), ItemField.create(GenSup.class));
	/** @cope.ignore */ @SuppressWarnings("rawtypes") // TODO enable after cope update
	static final MapField<GenMid,GenMid> mapMid = MapField.create(ItemField.create(GenMid.class), ItemField.create(GenMid.class));
	/** @cope.ignore */ // TODO enable after cope update
	static final MapField<GenSub,GenSub> mapSub = MapField.create(ItemField.create(GenSub.class), ItemField.create(GenSub.class));

	@SuppressWarnings("rawtypes") // TODO generated by instrumentor after cope update
	Map<GenSup,GenSup> getMapSupMap()
	{
		return mapSup.getMap(this);
	}

	@SuppressWarnings("rawtypes") // TODO generated by instrumentor after cope update
	Map<GenMid,GenMid> getMapMidMap()
	{
		return mapMid.getMap(this);
	}

	@SuppressWarnings("rawtypes") // TODO generated by instrumentor after cope update
	Map<GenSub,GenSub> getMapSubMap()
	{
		return mapSub.getMap(this);
	}


	/**

	 **
	 * Creates a new GenSource with all the fields initially needed.
	 * @param subMandatory the initial value for field {@link #subMandatory}.
	 * @throws com.exedio.cope.MandatoryViolationException if subMandatory is null.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	GenSource(
				final GenSub subMandatory)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		this(new com.exedio.cope.SetValue<?>[]{
			GenSource.subMandatory.map(subMandatory),
		});
	}/**

	 **
	 * Creates a new GenSource and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private GenSource(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #sup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSup<?,?> getSup()
	{
		return GenSource.sup.get(this);
	}/**

	 **
	 * Sets a new value for {@link #sup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSup(final GenSup<?,?> sup)
	{
		GenSource.sup.set(this,sup);
	}/**

	 **
	 * Returns the value of {@link #mid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenMid<?> getMid()
	{
		return GenSource.mid.get(this);
	}/**

	 **
	 * Sets a new value for {@link #mid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMid(final GenMid<?> mid)
	{
		GenSource.mid.set(this,mid);
	}/**

	 **
	 * Returns the value of {@link #sub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSub getSub()
	{
		return GenSource.sub.get(this);
	}/**

	 **
	 * Sets a new value for {@link #sub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSub(final GenSub sub)
	{
		GenSource.sub.set(this,sub);
	}/**

	 **
	 * Returns the value of {@link #moneySup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenSup<?,?>> getMoneySup()
	{
		return GenSource.moneySup.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneySup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneySup(final com.exedio.cope.pattern.Money<GenSup<?,?>> moneySup)
	{
		GenSource.moneySup.set(this,moneySup);
	}/**

	 **
	 * Returns the value of {@link #moneyMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenMid<?>> getMoneyMid()
	{
		return GenSource.moneyMid.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneyMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneyMid(final com.exedio.cope.pattern.Money<GenMid<?>> moneyMid)
	{
		GenSource.moneyMid.set(this,moneyMid);
	}/**

	 **
	 * Returns the value of {@link #moneySub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenSub> getMoneySub()
	{
		return GenSource.moneySub.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneySub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneySub(final com.exedio.cope.pattern.Money<GenSub> moneySub)
	{
		GenSource.moneySub.set(this,moneySub);
	}/**

	 **
	 * Returns the value of {@link #setSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.Set<GenSup<?,?>> getSetSup()
	{
		return GenSource.setSup.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #setSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenSup<?,?>> getSetSupQuery()
	{
		return GenSource.setSup.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field set {@link #setSup} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getParentsOfSetSup(final GenSup<?,?> element)
	{
		return GenSource.setSup.getParents(GenSource.class,element);
	}/**

	 **
	 * Sets a new value for {@link #setSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSetSup(final java.util.Collection<? extends GenSup<?,?>> setSup)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.setSup.set(this,setSup);
	}/**

	 **
	 * Adds a new element to {@link #setSup}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean addToSetSup(final GenSup<?,?> element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setSup.add(this,element);
	}/**

	 **
	 * Removes an element from {@link #setSup}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.removeFrom public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean removeFromSetSup(final GenSup<?,?> element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setSup.remove(this,element);
	}/**

	 **
	 * Returns the parent field of the type of {@link #setSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> setSupParent()
	{
		return GenSource.setSup.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #setMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.Set<GenMid<?>> getSetMid()
	{
		return GenSource.setMid.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #setMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenMid<?>> getSetMidQuery()
	{
		return GenSource.setMid.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field set {@link #setMid} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getParentsOfSetMid(final GenMid<?> element)
	{
		return GenSource.setMid.getParents(GenSource.class,element);
	}/**

	 **
	 * Sets a new value for {@link #setMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSetMid(final java.util.Collection<? extends GenMid<?>> setMid)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.setMid.set(this,setMid);
	}/**

	 **
	 * Adds a new element to {@link #setMid}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean addToSetMid(final GenMid<?> element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setMid.add(this,element);
	}/**

	 **
	 * Removes an element from {@link #setMid}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.removeFrom public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean removeFromSetMid(final GenMid<?> element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setMid.remove(this,element);
	}/**

	 **
	 * Returns the parent field of the type of {@link #setMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> setMidParent()
	{
		return GenSource.setMid.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #setSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.Set<GenSub> getSetSub()
	{
		return GenSource.setSub.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #setSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenSub> getSetSubQuery()
	{
		return GenSource.setSub.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field set {@link #setSub} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getParentsOfSetSub(final GenSub element)
	{
		return GenSource.setSub.getParents(GenSource.class,element);
	}/**

	 **
	 * Sets a new value for {@link #setSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSetSub(final java.util.Collection<? extends GenSub> setSub)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.setSub.set(this,setSub);
	}/**

	 **
	 * Adds a new element to {@link #setSub}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean addToSetSub(final GenSub element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setSub.add(this,element);
	}/**

	 **
	 * Removes an element from {@link #setSub}.
	 * @return <tt>true</tt> if the field set changed as a result of the call.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.removeFrom public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final boolean removeFromSetSub(final GenSub element)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		return GenSource.setSub.remove(this,element);
	}/**

	 **
	 * Returns the parent field of the type of {@link #setSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> setSubParent()
	{
		return GenSource.setSub.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #listSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.List<GenSup<?,?>> getListSup()
	{
		return GenSource.listSup.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #listSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenSup<?,?>> getListSupQuery()
	{
		return GenSource.listSup.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field list {@link #listSup} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getDistinctParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getDistinctParentsOfListSup(final GenSup<?,?> element)
	{
		return GenSource.listSup.getDistinctParents(GenSource.class,element);
	}/**

	 **
	 * Adds a new value for {@link #listSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void addToListSup(final GenSup<?,?> listSup)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listSup.add(this,listSup);
	}/**

	 **
	 * Sets a new value for {@link #listSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setListSup(final java.util.Collection<? extends GenSup<?,?>> listSup)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listSup.set(this,listSup);
	}/**

	 **
	 * Returns the parent field of the type of {@link #listSup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> listSupParent()
	{
		return GenSource.listSup.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #listMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.List<GenMid<?>> getListMid()
	{
		return GenSource.listMid.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #listMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenMid<?>> getListMidQuery()
	{
		return GenSource.listMid.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field list {@link #listMid} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getDistinctParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getDistinctParentsOfListMid(final GenMid<?> element)
	{
		return GenSource.listMid.getDistinctParents(GenSource.class,element);
	}/**

	 **
	 * Adds a new value for {@link #listMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void addToListMid(final GenMid<?> listMid)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listMid.add(this,listMid);
	}/**

	 **
	 * Sets a new value for {@link #listMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setListMid(final java.util.Collection<? extends GenMid<?>> listMid)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listMid.set(this,listMid);
	}/**

	 **
	 * Returns the parent field of the type of {@link #listMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> listMidParent()
	{
		return GenSource.listMid.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #listSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.util.List<GenSub> getListSub()
	{
		return GenSource.listSub.get(this);
	}/**

	 **
	 * Returns a query for the value of {@link #listSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getQuery public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.Query<GenSub> getListSubQuery()
	{
		return GenSource.listSub.getQuery(this);
	}/**

	 **
	 * Returns the items, for which field list {@link #listSub} contains the given element.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getDistinctParentsOf public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<GenSource> getDistinctParentsOfListSub(final GenSub element)
	{
		return GenSource.listSub.getDistinctParents(GenSource.class,element);
	}/**

	 **
	 * Adds a new value for {@link #listSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.addTo public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void addToListSub(final GenSub listSub)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listSub.add(this,listSub);
	}/**

	 **
	 * Sets a new value for {@link #listSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setListSub(final java.util.Collection<? extends GenSub> listSub)
			throws
				com.exedio.cope.MandatoryViolationException,
				java.lang.ClassCastException
	{
		GenSource.listSub.set(this,listSub);
	}/**

	 **
	 * Returns the parent field of the type of {@link #listSub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.Parent public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.ItemField<GenSource> listSubParent()
	{
		return GenSource.listSub.getParent(GenSource.class);
	}/**

	 **
	 * Returns the value of {@link #subFallback}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSub getSubFallback()
	{
		return GenSource.subFallback.get(this);
	}/**

	 **
	 * Sets a new value for {@link #subFallback}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSubFallback(final GenSub subFallback)
	{
		GenSource.subFallback.set(this,subFallback);
	}/**

	 **
	 * Returns the value of {@link #subMandatory}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSub getSubMandatory()
	{
		return GenSource.subMandatory.get(this);
	}/**

	 **
	 * Sets a new value for {@link #subMandatory}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSubMandatory(final GenSub subMandatory)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		GenSource.subMandatory.set(this,subMandatory);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for genSource.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<GenSource> TYPE = com.exedio.cope.TypesBound.newType(GenSource.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private GenSource(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
