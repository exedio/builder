package com.exedio.cope.builder.test.genericComplex;

import com.exedio.cope.Item;
import com.exedio.cope.ItemField;
import com.exedio.cope.pattern.MoneyField;

final class GenSource extends Item
{
	static final ItemField<GenSup<?,?>> sup = ItemField.create(GenSup.classWildcard.value).optional();
	static final ItemField<GenMid<?>>   mid = ItemField.create(GenMid.classWildcard.value).optional();
	static final ItemField<GenSub>      sub = ItemField.create(GenSub.class).optional();

	static final MoneyField<GenSup<?,?>> moneySup = MoneyField.exclusive(ItemField.create(GenSup.classWildcard.value)).optional();
	static final MoneyField<GenMid<?>>   moneyMid = MoneyField.exclusive(ItemField.create(GenMid.classWildcard.value)).optional();
	static final MoneyField<GenSub>      moneySub = MoneyField.exclusive(ItemField.create(GenSub.class)).optional();


	/**

	 **
	 * Creates a new GenSource with all the fields initially needed.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	GenSource()
	{
		this(new com.exedio.cope.SetValue<?>[]{
		});
	}/**

	 **
	 * Creates a new GenSource and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private GenSource(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #sup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSup<?,?> getSup()
	{
		return GenSource.sup.get(this);
	}/**

	 **
	 * Sets a new value for {@link #sup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSup(final GenSup<?,?> sup)
	{
		GenSource.sup.set(this,sup);
	}/**

	 **
	 * Returns the value of {@link #mid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenMid<?> getMid()
	{
		return GenSource.mid.get(this);
	}/**

	 **
	 * Sets a new value for {@link #mid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMid(final GenMid<?> mid)
	{
		GenSource.mid.set(this,mid);
	}/**

	 **
	 * Returns the value of {@link #sub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final GenSub getSub()
	{
		return GenSource.sub.get(this);
	}/**

	 **
	 * Sets a new value for {@link #sub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setSub(final GenSub sub)
	{
		GenSource.sub.set(this,sub);
	}/**

	 **
	 * Returns the value of {@link #moneySup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenSup<?,?>> getMoneySup()
	{
		return GenSource.moneySup.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneySup}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneySup(final com.exedio.cope.pattern.Money<GenSup<?,?>> moneySup)
	{
		GenSource.moneySup.set(this,moneySup);
	}/**

	 **
	 * Returns the value of {@link #moneyMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenMid<?>> getMoneyMid()
	{
		return GenSource.moneyMid.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneyMid}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneyMid(final com.exedio.cope.pattern.Money<GenMid<?>> moneyMid)
	{
		GenSource.moneyMid.set(this,moneyMid);
	}/**

	 **
	 * Returns the value of {@link #moneySub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final com.exedio.cope.pattern.Money<GenSub> getMoneySub()
	{
		return GenSource.moneySub.get(this);
	}/**

	 **
	 * Sets a new value for {@link #moneySub}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setMoneySub(final com.exedio.cope.pattern.Money<GenSub> moneySub)
	{
		GenSource.moneySub.set(this,moneySub);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for genSource.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<GenSource> TYPE = com.exedio.cope.TypesBound.newType(GenSource.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private GenSource(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
