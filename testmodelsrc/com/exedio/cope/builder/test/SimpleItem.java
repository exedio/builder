package com.exedio.cope.builder.test;

import com.exedio.cope.IntegerField;
import com.exedio.cope.Item;

final class SimpleItem extends Item
{
	static final IntegerField integerMandatory = new IntegerField().toFinal();

	/**
	 * @cope.get package
	 */
	private static final IntegerField integerOptional = new IntegerField().toFinal().optional();

	/**

	 **
	 * Creates a new SimpleItem with all the fields initially needed.
	 * @param integerMandatory the initial value for field {@link #integerMandatory}.
	 * @param integerOptional the initial value for field {@link #integerOptional}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	private SimpleItem(
				final int integerMandatory,
				final java.lang.Integer integerOptional)
	{
		this(new com.exedio.cope.SetValue<?>[]{
			SimpleItem.integerMandatory.map(integerMandatory),
			SimpleItem.integerOptional.map(integerOptional),
		});
	}/**

	 **
	 * Creates a new SimpleItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private SimpleItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #integerMandatory}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getIntegerMandatory()
	{
		return SimpleItem.integerMandatory.getMandatory(this);
	}/**

	 **
	 * Returns the value of {@link #integerOptional}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.Integer getIntegerOptional()
	{
		return SimpleItem.integerOptional.get(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for simpleItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<SimpleItem> TYPE = com.exedio.cope.TypesBound.newType(SimpleItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private SimpleItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
